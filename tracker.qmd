---
title: "Untitled"
format: 
    html:
        self-contained: true
editor: visual

execute:
  echo: false
---

```{r}
library(r2d3)
```

```{r}
dates <- seq(as.Date("2023-06-29"), as.Date("2023-08-28"), by="days")
```

```{r}
#| label: word-count-data
words <- c(800, 700, 600)
wordcount <- data.frame(day=dates, words=c(words, rep(0, 61-length(words))))

ojs_define(wordcountdata = wordcount)
```

```{r}
#| label: pomodoro-data
sessions <- c(8, 7, 6)
pomodoro <- data.frame(day=dates, sessions=c(sessions, rep(-3, 61-length(sessions))))

ojs_define(pomodorodata = pomodoro)
```

```{ojs}
wordcountdataParsed = transpose(wordcountdata)
wordcountdataParsed.words

Plot.plot({
  x: {
    label: null
  },
  y: {
    grid: true,
    label: "Word Count"
  },
  marks: [
    Plot.rectY(wordcountdataParsed,
    {x: (d) => new Date(d.day), 
    interval: d3.utcDay, 
    y: "words"})
    ]
})

// https://observablehq.com/d/146613c19e64e656
```

```{ojs}
pomodorodataParsed = transpose(pomodorodata)

Plot.plot({
  x: {
    label: null
    },
  y: {
    grid: false,
    ticks: true,
    label: "Sessions",
    domain: [0,10]
  },
  marks: [
  Plot.ruleY([0], { stroke: '#555' }),
    Plot.dot(pomodorodataParsed,
      Plot.stackY
      ({
      x: (d) => new Date(d.day), 
      interval: d3.utcDay, 
      y: "sessions",
      r: 6,
      fill: true})
      )
    ]
})
```
